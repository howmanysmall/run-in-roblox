name: Release

on:
  push:
    tags: ["*"]

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        include:
          - target: x86_64-pc-windows-msvc
            os: windows-2022
            name: run-in-roblox-win64
            ext: .exe
          - target: x86_64-apple-darwin
            os: macos-13
            name: run-in-roblox-macos-x86_64
            ext: ""
          - target: aarch64-apple-darwin
            os: macos-14
            name: run-in-roblox-macos-aarch64
            ext: ""
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-22.04
            name: run-in-roblox-linux-x86_64
            ext: ""
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-22.04
            name: run-in-roblox-linux-aarch64
            ext: ""
            cross: true

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: Setup Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Install cross (for ARM64 Linux)
      if: matrix.cross
      run: cargo install cross --git https://github.com/cross-rs/cross

    - name: Build release binary
      run: |
        if [ "${{ matrix.cross }}" = "true" ]; then
          cross build --verbose --locked --release --target ${{ matrix.target }}
        else
          cargo build --verbose --locked --release --target ${{ matrix.target }}
        fi
      shell: bash
      env:
        OPENSSL_STATIC: 1

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.name }}
        path: target/${{ matrix.target }}/release/run-in-roblox${{ matrix.ext }}
        if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Derive version (strip leading v if present)
      id: version
      run: |
        VERSION="${GITHUB_REF_NAME#v}"
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Create zipped release bundles
      run: |
        VERSION='${{ steps.version.outputs.version }}'
        
        # Create individual platform zips
        zip -j run-in-roblox-${VERSION}-windows-x86_64.zip run-in-roblox-win64/run-in-roblox.exe
        zip -j run-in-roblox-${VERSION}-macos-x86_64.zip run-in-roblox-macos-x86_64/run-in-roblox
        zip -j run-in-roblox-${VERSION}-macos-aarch64.zip run-in-roblox-macos-aarch64/run-in-roblox
        zip -j run-in-roblox-${VERSION}-linux-x86_64.zip run-in-roblox-linux-x86_64/run-in-roblox
        zip -j run-in-roblox-${VERSION}-linux-aarch64.zip run-in-roblox-linux-aarch64/run-in-roblox

    - name: Publish GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag_name: ${{ github.ref_name }}
        name: ${{ github.ref_name }}
        body: |
          Automated release created by workflow.
        draft: false
        prerelease: false
        files: |
          run-in-roblox-${{ steps.version.outputs.version }}-windows-x86_64.zip
          run-in-roblox-${{ steps.version.outputs.version }}-macos-x86_64.zip
          run-in-roblox-${{ steps.version.outputs.version }}-macos-aarch64.zip
          run-in-roblox-${{ steps.version.outputs.version }}-linux-x86_64.zip
          run-in-roblox-${{ steps.version.outputs.version }}-linux-aarch64.zip
